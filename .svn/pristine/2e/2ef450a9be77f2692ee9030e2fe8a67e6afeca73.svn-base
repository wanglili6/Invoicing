package com.mtecc.mmp.invoicing.activity;

import android.Manifest;
import android.content.Context;
import android.content.pm.PackageManager;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.text.TextUtils;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.apkfuns.logutils.LogUtils;
import com.mtecc.mmp.invoicing.R;
import com.mtecc.mmp.invoicing.base.BaseActivity;
import com.mtecc.mmp.invoicing.base.MyApplication;

import java.util.List;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;

public class LoginActivity extends BaseActivity {

    @BindView(R.id.login_btn_click)
    Button loginBtnClick;
    @BindView(R.id.login_tv_localtion)
    TextView loginTvLocaltion;

    @Override
    public void widgetClick(View v) {

    }

    @Override
    public void initParms(Bundle parms) {

    }

    @Override
    public View bindView() {
        return null;
    }

    @Override
    public int bindLayout() {
        return R.layout.activity_login;
    }

    @Override
    public void initView(View view) {
        ButterKnife.bind(this);
    }

    @Override
    public void setListener() {

    }

    @Override
    public void doBusiness(Context mContext) {

    }


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        // TODO: add setContentView(...) invocation
        ButterKnife.bind(this);
    }

    @OnClick(R.id.login_btn_click)
    public void onViewClicked() {
        //使用定位管理者获取定位坐标
        getLocation();

    }

    /**
     * 使用定位管理者获取定位坐标
     */
    private void getLocation() {
        MyApplication context = MyApplication.context();
        LocationManager systemService = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);
        List<String> providers = systemService.getProviders(true);
        String provider = "";
        for (int i = 0; i < providers.size(); i++) {
            if (providers.contains(LocationManager.GPS_PROVIDER)) {
                provider = LocationManager.GPS_PROVIDER;
            } else if (providers.contains(LocationManager.NETWORK_PROVIDER)) {
                provider = LocationManager.NETWORK_PROVIDER;
            }else{
                showToast("定位失败!");
            }
        }

        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
            // TODO: Consider calling
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
            return;
        }
        if (TextUtils.isEmpty(provider)){
            showToast("定位失败!");
        }else {
            Location location = systemService.getLastKnownLocation(provider);
            if (location!=null){
                LogUtils.d(location.getLatitude() + "---" + location.getLongitude());
                loginTvLocaltion.setText(location.getLatitude() + "---" + location.getLongitude());
            }
            systemService.requestLocationUpdates(provider, 2000, 1, new LocationListener() {
                @Override
                public void onLocationChanged(Location location) {
                    if (location!=null){
                        LogUtils.d(location.getLatitude() + "---" + location.getLongitude());
                        loginTvLocaltion.setText(location.getLatitude() + "---" + location.getLongitude());
                    }
                }

                @Override
                public void onStatusChanged(String provider, int status, Bundle extras) {
                    LogUtils.d(provider + "---" + status+"==="+status+extras.toString());
                }

                @Override
                public void onProviderEnabled(String provider) {
                    LogUtils.d(provider + "---" );
                }

                @Override
                public void onProviderDisabled(String provider) {
                    LogUtils.d(provider + "--777-" );
                }
            });
        }
    }
}
